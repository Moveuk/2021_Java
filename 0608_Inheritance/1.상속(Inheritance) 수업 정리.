// 이것이 자바다 _ 신용권 : 288p ~
// Key Word : 포함 관계, 상속(inheritance), 재정의(Override), 어노테이션(annotation), Final,
//	다형성(Polymorphism), 자동 타입 변환 (promotion)

//----------------------------------------------------------------------

	포함 관계 : student가 bus에 있는 인자를 가져와서 사용.

 상속 - com.cooperation
	상속 : A의 내용이 B에도 필요한 내용이기 때문에 A의 값을 상속받아 사용 가능하다.
	상속 대상 : 변수와 메소드만 상속이 가능하다 
			 private, 생성자는 상속이 불가능.

 상속과 관련된 특징

1. Override com.override
	재정의(Override) : 
	부모와 다른 기능의 메소드를 자식에서 사용하고 싶을시 재정의(Override)를 통하여 설정한다.

// 이글립스 Override 기능--------------------
// Source 탭 > Override/Implement Methods..
// 재정의 하고싶은 메소드 체크박스 선택 후 확인.
------------------------------------------

2. super
	자식 클래스에서의 첫줄 : super()                                                                                          
	super는 부모의 기본 생성자 호출이다.
	부모가 기본 생성자가 없고, CellPhone(매개값, ...)처럼 매개 변수가 있는 생성자만 있다면 
	자식에서 반드시 명시적으로 super(매개값, ...)를 호출해줘야 한다.
	
	super(); // 부모에 기본 생성자만 되어있을 경우 생략 가능.

	자식 클래스에서의 부모 메소드 호출 : super의 호출
//		return super.areaCircle(r);
		// super.라는 키워드를 통해서 부모의 메소드(본체)를 호출 가능함.

3. final
	Final 클래스, 메소드, 변수
	Final 클래스 : 상속 불가, 변경 수정 불가
	Final 메소드 : 재정의(Override) 불가
	Final 변수 : 상수 - 변경이 불가능한 변수 값.


4. protected : 이것이 자바다 _ 신용권 : 303p
	-> 내부 패키지 혹은 자식 클래스 내부에서만 사용 가능하다는 뜻의 접근 제어자.
	
	
 다형성(Polymorphism)
 
 	-> 같은 타입이지만 실행 결과가 다양한 객체를 이용할 수 있는 성질.
 
	1. 자동 타입 변환 (promotion)
		-> 메소드 오버라이드의 경우 부모 메소드의 시그니처 (리턴 타입,메소드 이름, 매개변수리스트 298p 내용)를 못바꾼다.
		-> 메소드 오버라이드와 다형성에 인한 클래스(인스턴스?)의 타입 변환 개념을 헷갈리지 말자.
		
	다형성 구조 예시
	A 	<	B	<	D
	 	<	C	<	E
		
	변수타입	변수이름
	A 		B1
	B		B2
	C		E1
	...
	등과 같이 가능 하지만 형제끼리 불가능.	ex) C D1 불가능.
		
	
	
